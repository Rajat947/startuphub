{"ast":null,"code":"var _jsxFileName = \"/home/rajat/Practice/startuphub/src/Components/Search.js\";\nimport React, { Component, createRef } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Search.css';\nimport searchIcon from \"../Img/searchIcon.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Search extends Component {\n  constructor(props) {\n    super(props);\n\n    this.HandleChange = event => {\n      this.setState({\n        value: event.target.value\n      }, () => {\n        console.log(`Value: ${this.state.value}`);\n      });\n    };\n\n    this.Focus = () => {\n      let element = this.inputRef.current;\n\n      if (element.hasFocus()) {\n        element.style.display = \"none\";\n      } else if (this.state.value === '') {\n        element.style.display = \"block\";\n      }\n    };\n\n    this.state = {\n      value: 'Seach ...'\n    };\n    this.inputRef = /*#__PURE__*/React.createRef();\n    this.textRef = /*#__PURE__*/React.createRef();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"Search\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"search-bar\",\n        type: \"text\",\n        ref: this.inputRef,\n        onChange: this.HandleChange,\n        onFocus: this.Focus,\n        onBlur: this.Focus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        id: \"searchIcon\",\n        src: searchIcon,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"seach-text\",\n        ref: this.textRef,\n        children: \"Seach...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Search;","map":{"version":3,"sources":["/home/rajat/Practice/startuphub/src/Components/Search.js"],"names":["React","Component","createRef","Search","constructor","props","HandleChange","event","setState","value","target","console","log","state","Focus","element","inputRef","current","hasFocus","style","display","textRef","render","searchIcon"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,OAAO,sCAAP;AACA,OAAO,cAAP;;;;AAGA,MAAMC,MAAN,SAAqBF,SAArB,CAA8B;AAC1BG,EAAAA,WAAW,CAACC,KAAD,EACX;AACI,UAAMA,KAAN;;AADJ,SAQAC,YARA,GAQgBC,KAAD,IAAS;AACpB,WAAKC,QAAL,CAAc;AACVC,QAAAA,KAAK,EAAEF,KAAK,CAACG,MAAN,CAAaD;AADV,OAAd,EAEE,MAAI;AAACE,QAAAA,OAAO,CAACC,GAAR,CAAa,UAAS,KAAKC,KAAL,CAAWJ,KAAM,EAAvC;AAA0C,OAFjD;AAGH,KAZD;;AAAA,SAaAK,KAbA,GAaQ,MAAI;AACR,UAAIC,OAAO,GAAG,KAAKC,QAAL,CAAcC,OAA5B;;AACA,UAAGF,OAAO,CAACG,QAAR,EAAH,EAAsB;AAClBH,QAAAA,OAAO,CAACI,KAAR,CAAcC,OAAd,GAAwB,MAAxB;AACH,OAFD,MAGK,IAAG,KAAKP,KAAL,CAAWJ,KAAX,KAAmB,EAAtB,EAAyB;AAC1BM,QAAAA,OAAO,CAACI,KAAR,CAAcC,OAAd,GAAwB,OAAxB;AACH;AACJ,KArBD;;AAEI,SAAKP,KAAL,GAAa;AACTJ,MAAAA,KAAK,EAAE;AADE,KAAb;AAGA,SAAKO,QAAL,gBAAgBhB,KAAK,CAACE,SAAN,EAAhB;AACA,SAAKmB,OAAL,gBAAerB,KAAK,CAACE,SAAN,EAAf;AACH;;AAeDoB,EAAAA,MAAM,GACN;AACI,wBACI;AAAK,MAAA,EAAE,EAAC,QAAR;AAAA,8BACI;AAAO,QAAA,EAAE,EAAC,YAAV;AAAuB,QAAA,IAAI,EAAC,MAA5B;AAAmC,QAAA,GAAG,EAAE,KAAKN,QAA7C;AAAuD,QAAA,QAAQ,EAAE,KAAKV,YAAtE;AAAoF,QAAA,OAAO,EAAE,KAAKQ,KAAlG;AAAyG,QAAA,MAAM,EAAE,KAAKA;AAAtH;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,EAAE,EAAC,YAAR;AAAqB,QAAA,GAAG,EAAES,UAA1B;AAAsC,QAAA,GAAG,EAAC;AAA1C;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAG,QAAA,EAAE,EAAC,YAAN;AAAmB,QAAA,GAAG,EAAE,KAAKF,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH;;AAjCyB;;AAmC9B,eAAelB,MAAf","sourcesContent":["import React, {Component, createRef} from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Search.css';\nimport searchIcon from \"../Img/searchIcon.svg\"\n\nclass Search extends Component{\n    constructor(props)\n    {\n        super(props)\n        this.state = {\n            value: 'Seach ...'\n        }\n        this.inputRef = React.createRef();\n        this.textRef = React.createRef();\n    }\n    HandleChange = (event)=>{\n        this.setState({\n            value: event.target.value\n        },()=>{console.log(`Value: ${this.state.value}`)})\n    }\n    Focus = ()=>{\n        let element = this.inputRef.current;\n        if(element.hasFocus()){\n            element.style.display = \"none\";\n        }\n        else if(this.state.value===''){\n            element.style.display = \"block\";\n        }\n    }\n    render()\n    {\n        return(\n            <div id=\"Search\">\n                <input id=\"search-bar\" type=\"text\" ref={this.inputRef} onChange={this.HandleChange} onFocus={this.Focus} onBlur={this.Focus}></input>\n                <img id=\"searchIcon\" src={searchIcon} alt=\"\"></img>\n                <p id=\"seach-text\" ref={this.textRef}>Seach...</p>\n            </div>\n        )\n    }\n}\nexport default Search;"]},"metadata":{},"sourceType":"module"}