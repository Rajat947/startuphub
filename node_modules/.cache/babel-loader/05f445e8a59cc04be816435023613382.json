{"ast":null,"code":"var _jsxFileName = \"/home/rajat/Practice/startuphub/src/Components/Form.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './Form.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Form extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggleDisabledButton = () => {\n      if (this.state.email !== \"\" && this.state.password !== \"\") {\n        this.submitRef.current.classList.remove(\"disabled\");\n        this.submitRef.current.classList.add(\"effect\");\n      } else if (this.submitRef.current.classList.contains(\"disabled\") === false) {\n        this.submitRef.current.classList.add(\"disabled\");\n        this.submitRef.current.classList.remove(\"effect\");\n      }\n    };\n\n    this.changed = event => {\n      let element = event.target.className;\n\n      switch (element) {\n        case \"email\":\n          {\n            this.setState({\n              email: event.target.value\n            }, this.toggleDisabledButton);\n            break;\n          }\n\n        case \"password\":\n          {\n            this.setState({\n              password: event.target.value\n            }, this.toggleDisabledButton);\n            break;\n          }\n\n        default:\n          break;\n      }\n\n      console.log(`email: ${this.state.email} and password: ${this.state.password}`);\n      this.errorRef.current.style.visibility = \"hidden\";\n    };\n\n    this.submit = event => {\n      event.preventDefault();\n\n      if (!this.submitRef.current.classList.contains(\"disabled\")) {\n        //Alert has to be replaced with call from server for validation\n        alert(\"email:\" + this.state.email + \" \\npassword: \" + this.state.password); //IN case of password and mail is incorrect\n\n        if (this.state.email !== \"Rajat\" && this.state.password !== \"12345678\") {\n          this.errorRef.current.style.visibility = \"visible\";\n          this.setState({\n            email: '',\n            password: ''\n          }, this.toggleDisabledButton);\n        } else {\n          document.getElementsByClassName(\"gotohome\").click();\n        }\n      }\n    };\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n    this.errorRef = /*#__PURE__*/React.createRef();\n    this.submitRef = /*#__PURE__*/React.createRef();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        ref: this.errorRef,\n        children: \"*Email or Password is incorrect. Try Again*\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email - Id  \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"email\",\n          type: \"text\",\n          value: this.state.email,\n          onChange: this.changed\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"password\",\n          type: \"password\",\n          value: this.state.password,\n          onChange: this.changed\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"submit-button disabled\",\n        onClick: this.submit,\n        ref: this.submitRef,\n        children: \"LOGIN\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        className: \"gotohome\",\n        to: \"/Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Form;","map":{"version":3,"sources":["/home/rajat/Practice/startuphub/src/Components/Form.js"],"names":["React","Component","Link","Form","constructor","props","toggleDisabledButton","state","email","password","submitRef","current","classList","remove","add","contains","changed","event","element","target","className","setState","value","console","log","errorRef","style","visibility","submit","preventDefault","alert","document","getElementsByClassName","click","createRef","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport { Link } from 'react-router-dom';\nimport './Form.css'\n\nclass Form extends Component{\n    constructor(props)\n    {\n        super(props)\n\n        this.state = {\n            email: '',\n            password: ''\n        }\n        this.errorRef = React.createRef();\n        this.submitRef = React.createRef();\n    }\n    toggleDisabledButton = ()=>{\n        if(this.state.email !== \"\" && this.state.password !== \"\")\n        {\n            this.submitRef.current.classList.remove(\"disabled\");\n            this.submitRef.current.classList.add(\"effect\");\n        }\n        else if(this.submitRef.current.classList.contains(\"disabled\") === false){\n            this.submitRef.current.classList.add(\"disabled\");\n            this.submitRef.current.classList.remove(\"effect\");\n        }\n    }\n    changed = (event)=>{\n        let element = event.target.className;\n        switch(element)\n        {\n            case \"email\":\n            {\n                this.setState({\n                    email: event.target.value,\n                }, this.toggleDisabledButton)\n                break;\n            }\n            case \"password\":\n            {\n                this.setState({\n                    password: event.target.value\n                }, this.toggleDisabledButton)\n                break;\n            }\n            default: break;\n        }\n        console.log(`email: ${this.state.email} and password: ${this.state.password}`);\n        this.errorRef.current.style.visibility = \"hidden\";\n    }\n    submit = (event)=>{\n        event.preventDefault();\n        if(!this.submitRef.current.classList.contains(\"disabled\")){\n            //Alert has to be replaced with call from server for validation\n            alert(\"email:\" + this.state.email+\" \\npassword: \"+this.state.password);\n            //IN case of password and mail is incorrect\n            if(this.state.email !== \"Rajat\" && this.state.password !== \"12345678\")\n            {\n                this.errorRef.current.style.visibility = \"visible\";\n                this.setState({\n                    email: '',\n                    password: ''\n                },this.toggleDisabledButton)\n            }\n            else{\n                document.getElementsByClassName(\"gotohome\").click();\n            }\n        }\n    }\n    render()\n    {\n        return(\n            <form>\n                <div className=\"error\" ref={this.errorRef}>*Email or Password is incorrect. Try Again*</div>\n                <div>\n                    <label>Email - Id  </label>\n                    <input className=\"email\" type=\"text\" value={this.state.email} onChange={this.changed}></input>\n                </div>\n                <div>\n                    <label>Password </label>\n                    <input className=\"password\"  type=\"password\" value={this.state.password} onChange={this.changed}></input>\n                </div>\n                <button className=\"submit-button disabled\" onClick={this.submit} ref={this.submitRef}>LOGIN</button>\n                <Link className=\"gotohome\" to=\"/Home\"></Link>\n            </form>\n        )\n    }\n}\nexport default Form;"]},"metadata":{},"sourceType":"module"}